﻿@using LostTimeWeb.WebApp.Services;

@{
    string location = string.Format( "{0}://{1}/", Context.Request.Scheme, Context.Request.Host );
    Token token = ( Token )ViewData[ "Token" ];
    string email = ( string )ViewData[ "Email" ];
    string breachPadding = ( string )ViewData[ "BreachPadding" ];
    <!--//IEnumerable<string> providers = ( IEnumerable<string> )ViewData[ "Providers" ];
    //string providerNames = string.Join( ",", providers.Select( p => string.Format( "'{0}'", p ) ) );-->
    string providerNames = ( string )ViewData[ "Providers" ];
    providerNames = string.Format( "'{0}'", providerNames);
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Authenticated</title>
</head>
<body>
    <p>connected</p>
    <script>
        (function () {
            console.log("trying to send the message");
            window.opener.postMessage(JSON.stringify({
                type: 'authenticated',
                payload: {
                    bearer: {
                        access_token: '@token.AccessToken',
                        expires_in: @token.ExpiresIn
                    },
                    email: '@email',
                    boundProviders: [@Html.Raw( providerNames )]
                }
            }), '@location');
            window.close();
        })();
    </script>
    <!-- @breachPadding -->
</body>
</html>